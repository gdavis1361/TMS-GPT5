----------------------------------------------------------
 Steps for a new release/push to master
----------------------------------------------------------

Make sure you have a staging environment setup, the system autodetects a staging
host name. This can be any name with the word "staging" in the name.
For example aat.tms.staging, staging.tms, jared.tms.staging, jared.staging.tms etc... 
Use the staging domain for the following steps

1. Run the build tool located at /resources/build/build. Use --h for usage information.
2. Test to make sure the build compiled and runs successfully.
3. Test any new features, to make sure compilation worked successfully

----------------------------------------------------------
 TMS Modern Monorepo (new)
----------------------------------------------------------

Quickstart
- Node: see .nvmrc (use Node 20)
- Install: npm ci
- Dev (docker, optional): docker-compose up -d
- Web dev: npm run dev -w @tms/web
- API dev: npm run dev -w @tms/api
 - Run CI locally (subset): npm run lint && npm run build

CI
- Lint, typecheck, prettier check, build
- npm audit, CodeQL, Trivy, SBOM artifact

Contributing
- See CONTRIBUTING.md; conventional commits enforced via commitlint

JWT signing (dev vs prod)
-------------------------
- Dev: HS256 with `JWT_SECRET` only (no key files). Default in docker-compose.
- Prod/Staging (RS256): set PEMs via env/secret manager (no files in VCS):
  - `JWT_PRIVATE_KEY`: RS256 private key (PEM)
  - `JWT_PUBLIC_KEY`: RS256 public key (PEM)
  - Optional: `JWT_ISSUER`, `JWT_AUDIENCE`, `JWT_KID`

Key rotation (RS256)
1. Generate new keypair (outside the repo):
   openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:2048 -out jwtRS256.key
   openssl rsa -in jwtRS256.key -pubout -out jwtRS256.pub
2. Update secret storage with new PEMs for the environment.
3. If publishing JWKS, assign a new `kid` and keep the old key published until old tokens expire.
4. Redeploy; then remove the old key from JWKS/secret store after the overlap window.

Important: never commit keys. `apps/api/keys/*` is ignored; that folder contains only a README.

RS256 local testing helpers
---------------------------
- Generate a keypair outside the repo:
  - `make rs256-gen`
- Export env variables into your shell:
  - `eval "$(make rs256-env)"`
- Bring up API with RS256 just for this run (Compose overrides env):
  - `make rs256-up`